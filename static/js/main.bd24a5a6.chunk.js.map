{"version":3,"sources":["Components/Cards/cards.module.css","Components/Cards/Cards.jsx","API/fetchDailyData.js","Components/Chart/Chart.jsx","API/CountryPicker.js","Components/CountryPicker/CountryPicker.jsx","API/index.js","App.js","index.js","App.module.css","Components/Chart/chart.module.css","Components/CountryPicker/CountryPicker.module.css","Images/CORONA1.jpg"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","fetchDailyData","a","axios","get","modifiedData","map","dailyData","total","date","reportDate","Chart","country","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","barChart","backgroundColor","options","legend","display","title","text","fetchCountrties","countries","name","CountryPicker","handleCountryChange","fetchCountry","setFetchedCountries","fetchCountries","fetchCountryAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","index","key","url","fetchData","changeURL","App","state","fetchedData","setState","this","image","src","CORONA","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd24a5a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cards_container__aCUWT\",\"card\":\"cards_card__7PdMb\",\"infected\":\"cards_infected__1zihs\",\"recovered\":\"cards_recovered__3Ybf6\",\"deaths\":\"cards_deaths__3UVgt\"};","import React from 'react'\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './cards.module.css';\r\nfunction Cards( { data : { confirmed, recovered, deaths, lastUpdate} } ) {\r\n    if(!confirmed) return 'Loadiing...'\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={ cx(styles.card, styles.infected )}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                start = {0}\r\n                                end = {confirmed.value}\r\n                                duration = {2.5}\r\n                                separator= \",\"\r\n                            />\r\n                        </Typography>   \r\n                        <Typography color=\"textSecondary\">{ new Date(lastUpdate).toDateString() }</Typography>    \r\n                        <Typography variant=\"body2\">Number of active cases of Covid-19</Typography>             \r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={ cx(styles.card, styles.recovered )}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                start = {0}\r\n                                end = {recovered.value}\r\n                                duration = {2.5}\r\n                                separator= \",\"\r\n                            />\r\n                        </Typography>     \r\n                        <Typography color=\"textSecondary\">{ new Date(lastUpdate).toDateString() }</Typography>\r\n                        <Typography variant=\"body2\">Number of Recovered cases of Covid-19</Typography>             \r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={ cx(styles.card, styles.deaths )}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                start = {0}\r\n                                end = {deaths.value}\r\n                                duration = {2.5}\r\n                                separator= \",\"\r\n                            />\r\n                        </Typography>     \r\n                        <Typography color=\"textSecondary\">{ new Date(lastUpdate).toDateString() }</Typography>   \r\n                        <Typography variant=\"body2\">Number of Deaths of Covid-19</Typography>             \r\n                    </CardContent>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import axios from 'axios';\r\n\r\nconst url1 = 'https://covid19.mathdro.id/api/daily';\r\n\r\nconst fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(url1);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport default fetchDailyData;","import React, {useState, useEffect } from 'react'\r\nimport fetchDailyData from '../../API/fetchDailyData';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from  './chart.module.css';\r\nfunction Chart({data : { confirmed, recovered, deaths }, country}) {\r\n\r\n    const [ dailyData, setDailyData ] = useState ({\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        \r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? \r\n        <Line\r\n            data={{\r\n                labels: dailyData.map(( { date }) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(( { confirmed }) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                }, {\r\n                    data: dailyData.map(( { deaths }) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n        /> : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed \r\n        ? (\r\n            <Bar \r\n                data = {{\r\n                    labels: ['INFECTED', 'RECOVERED', 'DEATHS'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: [\r\n                        'rgba(0, 0, 255, 0.5)',\r\n                        'rgba(0, 255, 0, 0.5)',\r\n                        'rgba(255, 0, 0, 0.5)'\r\n                    ],\r\n                    data: [ confirmed.value , recovered.value, deaths.value ]\r\n                    }]\r\n                }}\r\n                options = {{\r\n                    legend: {display: false},\r\n                    title: {display: true, text: `Current Country in ${country}`},\r\n                }}\r\n\r\n            />\r\n        ) : null\r\n    );\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            { country ? barChart : lineChart }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;\r\n","\r\nimport axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api/countries';\r\n\r\nconst fetchCountrties = async () => {\r\n    try {\r\n        const { data: { countries }} = await axios.get(url);\r\n        \r\n        return countries.map((country) => country.name);\r\n    } \r\n    catch (error) {\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default fetchCountrties ;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport fetchCountries  from '../../API/CountryPicker';\r\n\r\nimport styles from './CountryPicker.module.css';\r\nfunction CountryPicker({ handleCountryChange }) {\r\n    const [fetchCountry, setFetchedCountries ] = useState([]); \r\n    useEffect(() => {\r\n        const fetchCountryAPI = async() => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchCountryAPI();\r\n    }, [setFetchedCountries]);\r\n    return (\r\n        <div>\r\n            <FormControl className={styles.formControl}>\r\n                <NativeSelect defaultValue = \"\" onChange={ (e) => handleCountryChange(e.target.value) }>\r\n                    <option value = \"\" >GLobal</option>\r\n                    {fetchCountry.map((country, index) => <option key = {index} value = {country}>{country}</option>)}\r\n                </NativeSelect>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nconst fetchData = async (country) => {\r\n    let changeURL = url;\r\n\r\n    if (country) {\r\n        changeURL = `${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeURL);\r\n        \r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n\r\n    } \r\n    catch (error) {\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default fetchData ;\r\n","import React, { Component } from 'react'\r\nimport { Cards, Chart, CountryPicker } from './Components';\r\nimport fetchData from './API';\r\n\r\nimport CORONA from './Images/CORONA1.jpg';\r\nimport styles from './App.module.css';\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        //fetching the data\r\n        const fetchedData = await fetchData(country);\r\n\r\n        //set the state\r\n\r\n        this.setState ( {\r\n            data: fetchedData,\r\n            country: country,\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState ( {\r\n            data: fetchedData\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const data = this.state.data;\r\n        const country = this.state.country;\r\n        return (\r\n            <div className={styles.container}>\r\n            <img className = {styles.image} src={CORONA} alt = \"Covid-19\" />\r\n                <Cards data = {data} />\r\n                <CountryPicker handleCountryChange = {this.handleCountryChange}/>\r\n                <Chart data = {data} country = {country} />\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__FH4XG\",\"image\":\"App_image__16Owo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chart_container__1Iwq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__wPjwL\"};","module.exports = __webpack_public_path__ + \"static/media/CORONA1.a84eb560.jpg\";"],"sourceRoot":""}